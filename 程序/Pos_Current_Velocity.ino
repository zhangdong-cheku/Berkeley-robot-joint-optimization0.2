// ============================================================================
// 文件：Pos_Current_Velocity.ino
// 功能：FOC系统主程序 - 位置-速度-电流三环控制
// 说明：实现基于AS5600传感器的位置闭环、速度闭环和电流闭环控制
// ============================================================================

// ============================================================================
// 头文件包含
// ============================================================================
#include "FOC.h"           //!< FOC核心库头文件 - 包含FOC算法实现
#include "Ble_Handler.h"   //!< BLE通信处理头文件 - 支持无线控制功能

// ============================================================================
// 系统配置参数
// ============================================================================

// 传感器和电机参数配置
int Sensor_DIR = -1;  //!< 传感器方向：-1表示反向，1表示正向
                      //!< 用于校正传感器读数与电机实际旋转方向的关系

int Motor_PP = 7;     //!< 电机极对数：7对极（14极电机）
                      //!< 定义电机的磁极数量，用于电角度计算

// 备用配置（注释状态）
//int Motor_PP = 14;     //!< 电机极对数：14对极（28极电机）- 备用配置

// ============================================================================
// PID控制器限幅参数
// ============================================================================

// 位置环PID限幅参数
int angle_PID_limit = 70;  //!< 角度PID输出限幅：70度/秒
                          //!< 限制位置环控制器的最大输出速度

// 速度环PID限幅参数  
float vel_PID_limit = 6.5;  //!< 速度PID输出限幅：6.5安培（电流）
                           //!< 限制速度环控制器的最大输出电流

// 备用配置（注释状态）
//int angle_PID_limit = 5;  //!< 角度PID输出限幅：5度/秒 - 备用配置

// ============================================================================
// 函数：setup
// 功能：系统初始化函数
// 说明：在系统启动时执行一次，完成硬件和软件的初始化
// ============================================================================
void setup() {
  // 串口通信初始化
  Serial.begin(115200);  //!< 初始化串口通信，波特率115200
                       //!< 用于调试信息输出和串口命令接收

  // 电机使能控制
  pinMode(12, OUTPUT);     //!< 设置12号引脚为输出模式（电机使能引脚）
  digitalWrite(12, HIGH); //!< 输出高电平，使能电机驱动器
                         //!< 确保电机处于可控制状态

  // FOC系统参数配置
  setPowerSupplyVoltage(15.6);  //!< 设置供电电压：15.6V
                               //!< 用于电压补偿和电流计算

  calibrateSensor(Motor_PP, Sensor_DIR);  //!< 传感器校准：设置极对数和旋转方向
                                        //!< 确保传感器读数与电机实际位置对应

  // BLE通信初始化
  initBLEServer();  //!< 初始化BLE服务器，开始广播等待连接
                   //!< 启用无线控制功能
}

// ============================================================================
// 全局变量定义
// ============================================================================
int count = 0;  //!< 循环计数器 - 可用于调试或定时任务

// ============================================================================
// 函数：loop
// 功能：主循环函数
// 说明：系统主循环，持续执行控制算法和通信处理
// ============================================================================
void loop() {
  // ==========================================================================
  // 第一步：通信处理
  // ==========================================================================
  BLE_Server_Loop();  //!< BLE服务器循环处理
                     //!< 处理连接状态、接收数据、发送心跳包

  // ==========================================================================
  // 第二步：FOC算法执行
  // ==========================================================================
  runFOC();  //!< 执行FOC核心算法
            //!< 包括：传感器读数、坐标变换、SVPWM生成等

  // ==========================================================================
  // 第三步：PID控制器参数配置
  // ==========================================================================
  
  // 位置环PID参数配置
  configureAnglePID(1, 0, 0, 10000, angle_PID_limit);
  // 参数说明：
  // - P=1.0：比例增益 - 决定位置环的响应速度
  // - I=0：积分增益 - 消除位置稳态误差（当前禁用）
  // - D=0：微分增益 - 抑制位置振荡（当前禁用）
  // - 输出变化率限制=10000：限制PID输出变化速度
  // - 输出限幅=angle_PID_limit：限制最大输出速度（70度/秒）

  // 速度环PID参数配置
  configureVelocityPID(0.02, 1, 0, 10000, vel_PID_limit);
  // 参数说明：
  // - P=0.02：比例增益 - 速度环响应
  // - I=1.0：积分增益 - 消除速度稳态误差
  // - D=0：微分增益 - 速度环阻尼（当前禁用）
  // - 输出变化率限制=10000：限制速度环输出变化
  // - 输出限幅=vel_PID_limit：限制最大输出电流（6.5A）

  // 电流环PID参数配置
  configureCurrentPID(5, 200, 0, 10000);
  // 参数说明：
  // - P=5.0：比例增益 - 电流环快速响应
  // - I=200：积分增益 - 消除电流跟踪误差
  // - D=0：微分增益 - 电流环阻尼（当前禁用）
  // - 输出变化率限制=10000：限制电流环输出变化

  // ==========================================================================
  // 第四步：电机控制执行
  // ==========================================================================
  setMotorVelocityWithAngle(getSerialMotorTarget());
  // 功能说明：
  // - getSerialMotorTarget()：获取目标位置（来自BLE或串口）
  // - setMotorVelocityWithAngle()：基于目标位置的速度控制
  //   实现位置环→速度环→电流环的级联控制

  // ==========================================================================
  // 第五步：串口命令处理
  // ==========================================================================
  readSerialCommand();  //!< 读取和处理串口命令
                       //!< 支持调试命令和实时参数调整
}